{
  "openapi": "3.0.0",
  "info": {
    "title": "Company and Document Management API",
    "version": "1.0.0",
    "description": "API for managing companies, documents, products, and payments"
  },
  "servers": [
    {
      "url": "https://api-billing.koywe.com/V1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "summary": "Authenticate and receive a bearer token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful authentication",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "summary": "Create a new account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountsPost"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Your account is successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid input or validation error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid token or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error - unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/accounts/{account_id}": {
      "get": {
        "summary": "Get a specific account",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Account ID to read"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountsResponseGet"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid input or validation error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/documents": {
      "get": {
        "summary": "Get a paginated list of documents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "issue_date_from",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Filter from this date (inclusive). Format AAAA-MM-DD"
            }
          },
          {
            "name": "issue_date_to",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Filter to this date (inclusive). Format AAAA-MM-DD"
            }
          },
          {
            "name": "taxbureau_sending_status",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "0 = Sending. 1XX = Retrying sending. 2XX = Rejected by Tax Bureau. 1 = Received by Tax Bureau. 2 = Closed without sending. 3 = Imported from another system. "
            }
          },
          {
            "name": "taxbureau_validation_status",
            "in": "query",
            "schema": {
              "type": "integer",
              "description": "0,1 = In process. 2 = Rejected by tax bureau. 3 = Accepted by tax bureau. 4 = Accepted by tax bureau with warnings."
            }
          },
          {
            "name": "document_number",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Document number"
            }
          },
          {
            "name": "document_type_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "description" : "Document type ID according to the country"
            }
          },
          {
            "name": "received_issued_flag",
            "in": "query",
            "schema": {
              "type": "number",
              "description": "0 = issued, 1 = received"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_links": {
                      "type": "object",
                      "properties": {
                        "self": {
                          "type": "string"
                        },
                        "first": {
                          "type": "string"
                        },
                        "last": {
                          "type": "string"
                        },
                        "next": {
                          "type": "string"
                        }
                      }
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SimplifiedDocument"
                      }
                    },
                    "page_count": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "total_items": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create a new document",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentPost"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Document created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid document type ID"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid token or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error - unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/documents/{document_id}": {
      "get": {
        "summary": "Get a specific document",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update a specific document",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Document"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "description": "Cannot update a signed document"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a specific document",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Document deleted successfully"
          },
          "400": {
            "description": "Cannot delete a signed document"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/inbox_documents": {
      "get": {
        "summary": "Get a paginated list of received documents",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 10
            }
          },
          {
            "name": "issuer_tax_id_code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver_tax_id_code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "receiver_name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "issuer_name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "amount_lte",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "amount_gte",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "document_type_id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/InboxDocument"
                      }
                    },
                    "total": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "per_page": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/inbox_documents/{inbox_document_id}": {
      "get": {
        "summary": "Get a specific received document",
        "parameters": [
          {
            "name": "inbox_document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxDocument"
                }
              }
            }
          },
          "404": {
            "description": "Document not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Accept or reject a document",
        "parameters": [
          {
            "name": "inbox_document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "document_status": {
                    "type": "string",
                    "enum": ["accepted", "rejected"]
                  }
                },
                "required": ["document_status"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status or document not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/digital_certificate_issuance/{certificate_issuance_id}": {
      "get": {
        "summary": "Get a specific digital certificate link",
        "parameters": [
          {
            "name": "certificate_issuance_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Certificate ID of the created link"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Digital_certificate_issuanceResponseGet"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid input or validation error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/digital_certificate_issuance": {
      "post": {
        "summary": "Create a new digital certificate link",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Digital_certificate_issuancePost"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Digital certificate link successfully generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Digital_certificate_issuanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid input or validation error"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid token or missing authentication",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Invalid or expired token"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error - unexpected error occurred",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/payments": {
      "post": {
        "summary": "Create a new payment",
        "description": "Creates a new payment with the given details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment created successfully"
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/payments/{payment_id}": {
      "get": {
        "summary": "Get a specific payment",
        "parameters": [
          {
            "name": "payment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Payment ID of the created payment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponseGet"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input or validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "invalid input or validation error"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products": {
      "post": {
        "summary": "Creates a new product",
        "description": "Adds a new product with the provided details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "invoicing_details": { "type": "string" },
                  "additional_details": { "type": "string" },
                  "model": { "type": "string" },
                  "brand": { "type": "string" },
                  "status": { "type": "integer" },
                  "sku": { "type": "string" },
                  "barcode": { "type": "string" },
                  "measure_unit": { "type": "string" },
                  "type": { "type": "integer" },
                  "embedded_quantity_barcode": { "type": "integer" },
                  "embedded_quantity_barcode_decimals": { "type": "integer" },
                  "additional_data_1": { "type": "string" },
                  "additional_data_2": { "type": "string" },
                  "additional_data_3": { "type": "string" },
                  "favorite": { "type": "integer" },
                  "product_category_id": { "type": "integer" },
                  "cost": {
                    "type": "object",
                    "properties": {
                      "currency_id": { "type": "integer" },
                      "value": { "type": "number" }
                    }
                  },
                  "price": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "price_list_id": { "type": "integer" },
                        "unit_price": { "type": "number" },
                        "unit_tax": { "type": "number" },
                        "unit_total": { "type": "number" },
                        "currency_id": { "type": "integer" },
                        "comission_amount": { "type": "number" },
                        "taxes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tax_type_id": { "type": "string" },
                              "tax_percentage": { "type": "number" },
                              "tax_amount": { "type": "number" }
                            }
                          }
                        }
                      }
                    }
                  },
                  "inventories": {
                    "type": "object",
                    "properties": {
                      "total_available": {
                        "type": "number"
                      },
                      "total_reserved": {
                        "type": "number"
                      },
                      "details": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "product_location_id": {
                              "type": "string"
                            },
                            "available_quantity": {
                              "type": "number"
                            },
                            "reserved_quantity": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "required": ["name", "status", "product_category_id", "cost", "price"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully."
          }
        }
      },
      "get": {
        "summary": "Lists all products",
        "description": "Retrieves a list of all products, with optional search parameters.",
        "parameters": [
          {
            "name": "product_category_id",
            "in": "query",
            "description": "Filter by product category ID.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "sku",
            "in": "query",
            "description": "Filter by SKU.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by product name.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by product type.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "model",
            "in": "query",
            "description": "Filter by model.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "description": "Filter by brand.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status. If not sent, it will only present products with status = 1.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "additional_data_1",
            "in": "query",
            "description": "Filter by additional data 1.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_data_2",
            "in": "query",
            "description": "Filter by additional data 2.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "additional_data_3",
            "in": "query",
            "description": "Filter by additional data 3.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "barcode",
            "in": "query",
            "description": "Filter by barcode.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_id": { "type": "integer" },
                      "name": { "type": "string" },
                      "status": { "type": "integer" },
                      "product_category_id": { "type": "integer" },
                      "type": { "type": "string" },
                      "sku": { "type": "string" }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/{product_id}": {
      "get": {
        "summary": "Retrieves a specific product",
        "description": "Fetches details of a product by its ID.",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the specified product.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product_id": { "type": "integer" },
                    "name": { "type": "string" },
                    "invoicing_details": { "type": "string" },
                    "additional_details": { "type": "string" },
                    "model": { "type": "string" },
                    "brand": { "type": "string" },
                    "status": { "type": "integer" },
                    "sku": { "type": "string" },
                    "barcode": { "type": "string" },
                    "measure_unit": { "type": "string" },
                    "type": { "type": "integer" },
                    "embedded_quantity_barcode": { "type": "integer" },
                    "embedded_quantity_barcode_decimals": { "type": "integer" },
                    "additional_data_1": { "type": "string" },
                    "additional_data_2": { "type": "string" },
                    "additional_data_3": { "type": "string" },
                    "favorite": { "type": "integer" },
                    "product_category_id": { "type": "integer" },
                    "cost": {
                      "type": "object",
                      "properties": {
                        "currency_id": { "type": "integer" },
                        "value": { "type": "number" }
                      }
                    },
                    "price": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "price_list_id": { "type": "integer" },
                          "unit_price": { "type": "number" },
                          "unit_tax": { "type": "number" },
                          "unit_total": { "type": "number" },
                          "currency_id": { "type": "integer" },
                          "comission_amount": { "type": "number" },
                          "taxes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "tax_type_id": { "type": "string" },
                                "tax_percentage": { "type": "number" },
                                "tax_amount": { "type": "number" }
                              }
                            }
                          }
                        }
                      }
                    },
                    "inventories": {
                      "type": "object",
                      "properties": {
                        "total_available": {
                          "type": "number"
                        },
                        "total_reserved": {
                          "type": "number"
                        },
                        "details": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "product_location_id": {
                                "type": "string"
                              },
                              "available_quantity": {
                                "type": "number"
                              },
                              "reserved_quantity": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update product",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully",
            "content": {
              "application/json": {

              }
            }
          },
          "400": {
            "description": "Invalid data or product not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Deletes a specific product",
        "description": "Removes a product identified by its ID.",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully."
          }
        }
      }
    },
    "/product_price_lists": {
      "post": {
        "summary": "Creates a new product price list",
        "description": "Creates a new product price list with the given details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the products price list."
                  }
                },
                "required": ["product_price_list_id", "name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Products price list created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product_price_list_id": {
                      "type": "integer",
                      "description": "Unique identifier for the newly created products price list."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the newly created products price list."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieves all products price lists",
        "description": "Returns a list of all products price lists.",
        "responses": {
          "200": {
            "description": "A list of products price lists.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_price_list_id": {
                        "type": "integer",
                        "description": "Unique identifier for a products price list."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the products price list."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product_price_lists/{product_price_list_id}": {
      "get": {
        "summary": "Retrieves a specific products price list",
        "description": "Fetches details of a products price list by its ID.",
        "parameters": [
          {
            "name": "product_price_list_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the products price list.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Details of the specified products price list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product_price_list_id": {
                      "type": "integer",
                      "description": "Unique identifier for the products price list."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the products price list."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update product price list",
        "parameters": [
          {
            "name": "product_price_list_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product price list updated successfully",
            "content": {
              "application/json": {

              }
            }
          },
          "400": {
            "description": "Invalid data or product price list not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Deletes a specific products price list",
        "description": "Removes a products price list identified by its ID.",
        "parameters": [
          {
            "name": "product_price_list_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the products price list to delete.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Products price list deleted successfully."
          }
        }
      }
    },
    "/product_locations": {
      "post": {
        "summary": "Creates a new product location",
        "description": "Creates a new product location with the given details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the product location."
                  },
                  "status": {
                    "type": "integer",
                    "description": "Status of the product location."
                  },
                  "company_branch_id": {
                    "type": "integer",
                    "description": "Identifier for the company branch associated with the product location."
                  }
                },
                "required": [ "name", "status", "company_branch_id"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product location created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product_location_id": {
                      "type": "integer",
                      "description": "Unique identifier for the newly created product location."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the newly created product location."
                    },
                    "status": {
                      "type": "integer",
                      "description": "Status of the newly created product location."
                    },
                    "company_branch_id": {
                      "type": "integer",
                      "description": "Identifier for the company branch associated with the newly created product location."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieves all product locations",
        "description": "Returns a list of all product locations.",
        "responses": {
          "200": {
            "description": "A list of product locations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_location_id": {
                        "type": "integer",
                        "description": "Unique identifier for the product location."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the product location."
                      },
                      "status": {
                        "type": "integer",
                        "description": "Status of the product location."
                      },
                      "company_branch_id": {
                        "type": "integer",
                        "description": "Identifier for the company branch associated with the product location."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product_locations/{product_location_id}": {
      "get": {
        "summary": "Retrieves a specific Product location",
        "description": "Returns the details of a product location.",
        "responses": {
          "200": {
            "description": "The detail of a product location.",
            "content": {
              "application/json": {
                "schema": {
                    "type": "object",
                    "properties": {
                      "product_location_id": {
                        "type": "integer",
                        "description": "Unique identifier for the product location."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the product location."
                      },
                      "status": {
                        "type": "integer",
                        "description": "Status of the product location."
                      },
                      "company_branch_id": {
                        "type": "integer",
                        "description": "Identifier for the company branch associated with the product location."
                      }
                    }
                  }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update product location",
        "parameters": [
          {
            "name": "product_location_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "company_branch_id": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
          },
        "responses": {
          "200": {
            "description": "Product location updated successfully",
            "content": {
              "application/json": {

              }
            }
          },
          "400": {
            "description": "Invalid data or product location not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
        },
      "delete": {
        "summary": "Deletes a specific products location",
        "description": "Removes a products location identified by its ID.",
        "parameters": [
          {
            "name": "product_location_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the products location to delete.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Products location deleted successfully."
          }
        }
      }
    },
    "/product_categories": {
      "post": {
        "summary": "Creates a new product category",
        "description": "Creates a new product category with the given details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the product category."
                  },
                  "parent_product_category_id": {
                    "type": "integer",
                    "description": "Identifier of the parent category. null if there is no parent category."
                  }
                },
                "required": [ "name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product category created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product_category_id": {
                      "type": "string",
                      "description": "Unique identifier for the newly created product category."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the newly created product category."
                    },
                    "parent_product_category_id": {
                      "type": "string",
                      "description": "Identifier for the parent category. null if there is no parent category."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieves all product categories",
        "description": "Returns a list of all product categories.",
        "responses": {
          "200": {
            "description": "A list of product categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "product_category_id": {
                        "type": "string",
                        "description": "Unique identifier for the product category."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the product category."
                      },
                      "parent_product_category_id": {
                        "type": "integer",
                        "description": "Identifier for the parent category. null if no parent."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/product_categories/{product_category_id}": {
      "get": {
        "summary": "Retrieves a specific product category",
        "description": "Returns the details of a product category.",
        "responses": {
          "200": {
            "description": "The detail of a product category.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "product_category_id": {
                      "type": "integer",
                      "description": "Unique identifier for the product category."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the product category."
                    },
                    "parent_product_category_id": {
                      "type": "integer",
                      "description": "Identifier for the parent category. null if no parent."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update product category",
        "parameters": [
          {
            "name": "product_category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "parent_product_category_id": {
                    "type": "string"
                  }
                },
                "required": ["name"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product category updated successfully",
            "content": {
              "application/json": {

              }
            }
          },
          "400": {
            "description": "Invalid data or product category not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Deletes a specific products category",
        "description": "Removes a products category identified by its ID.",
        "parameters": [
          {
            "name": "product_category_id",
            "in": "path",
            "required": true,
            "description": "Unique identifier for the products category to delete.",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Products category deleted successfully."
          }
        }
      }
    }
  },
"components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "AuthRequest": {
        "type": "object",
        "properties": {
          "grant_type": {
            "type": "string",
            "description": "Use the text 'password' for password type grant",
            "example": "password"
          },
          "client_id": {
            "type": "string",
            "description": ""
          },
          "client_secret": {
            "type": "string"
          },
          "username": {
            "type": "string",
            "description": "API username, not be confused with your website username"
          },
          "password": {
            "type": "string",
            "description": "API password, not be confused with your website password"
          }
        },
        "required": ["grant_type", "client_id", "client_secret", "username", "password"]
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "expires_in": {
            "type": "integer"
          },
          "token_type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "refresh_token": {
            "type": "string"
          }
        }
      },
      "CompanyResponse": {
        "type": "object",
        "properties": {
          "basic_info": {
            "$ref": "#/components/schemas/Company/properties/basic_info"
          },
          "tax_id_type": {
            "type": "string"
          },
          "tax_id_code": {
            "type": "string"
          }
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "basic_info": {
            "type": "object",
            "properties": {
              "company_id": {
                "type": "string",
                "description": "Read only. Company ID",
                "example": "comp-123456"
              },
              "name": {
                "type": "string",
                "description": "Internal name of the company",
                "example": "Acme Corporation"
              }
            },
            "required": ["name"]
          },
          "billing_data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "company_billing_id": {
                  "type": "string",
                  "description": "Read only. ID of this specific billing information to be used when issuing documents",
                  "example": "bill-987654"
                },
                "tax_id_type": {
                  "type": "string",
                  "description": "Tax ID type according to tax ID table. If not entered, you won't be able to use this billing_data for invoices and documents that require it",
                  "example": "VAT"
                },
                "tax_id_code": {
                  "type": "string",
                  "description": "Tax ID code",
                  "example": "US123456789"
                },
                "legal_name": {
                  "type": "string",
                  "description": "Full name or business name",
                  "example": "Acme Corporation LLC"
                },
                "address_street": {
                  "type": "string",
                  "description": "Street address",
                  "example": "123 Main St"
                },
                "address_number": {
                  "type": "number",
                  "description": "Street number",
                  "example": 123
                },
                "address_unit_number": {
                  "type": "string",
                  "description": "Street unit number",
                  "example": "Suite 400"
                },
                "address_district": {
                  "type": "string",
                  "description": "District, county, or commune",
                  "example": "Downtown"
                },
                "address_city": {
                  "type": "string",
                  "description": "City name",
                  "example": "New York"
                },
                "address_postalcode": {
                  "type": "string",
                  "description": "Postal code",
                  "example": "10001"
                },
                "country_id": {
                  "type": "string",
                  "description": "Country ID according to ID table",
                  "example": "US"
                }
              },
              "required": [
                "legal_name",
                "address_street",
                "address_number",
                "address_unit_number",
                "address_district",
                "address_city",
                "address_postalcode",
                "country_id"
              ]
            }
          },
          "contacts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "company_contact_id": {
                  "type": "string",
                  "description": "Read only. ID of this specific contact"
                },
                "first_name": {
                  "type": "string",
                  "description": "First name"
                },
                "middle_name": {
                  "type": "string",
                  "description": "Middle name"
                },
                "last_name_primary": {
                  "type": "string",
                  "description": "Last name or first last name"
                },
                "last_name_secondary": {
                  "type": "string",
                  "description": "Second last name"
                },
                "phone": {
                  "type": "number",
                  "description": "Phone number"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Email address"
                }
              },
              "required": ["first_name"]
            }
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "country_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "iso_code_2": {
            "type": "string"
          },
          "iso_code_3": {
            "type": "string"
          },
          "flag_icon_url": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": ["country_id", "name", "iso_code_2", "iso_code_3", "flag_icon_url"]
      },
      "PaymentInfo": {
        "type": "object",
        "properties": {
          "tax_id_code": {
            "type": "string"
          },
          "tax_id_type": {
            "type": "string"
          },
          "legalname": {
            "type": "string"
          },
          "addresses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "address": {
                  "type": "string"
                },
                "district": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                }
              }
            }
          },
          "activities": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "line_code": {
                  "type": "string"
                },
                "line_description": {
                  "type": "string"
                },
                "subline_code": {
                  "type": "string"
                },
                "subline_description": {
                  "type": "string"
                },
                "activity_code": {
                  "type": "string"
                },
                "activity_description": {
                  "type": "string"
                }
              }
            }
          }
        },
        "required": ["tax_id_code", "tax_id_type", "legalname"]
      },
      "Contacts": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "company_contact_id": {
              "type": "string"
            },
            "first_name": {
              "type": "string"
            },
            "middle_name": {
              "type": "string"
            },
            "last_name_primary": {
              "type": "string"
            },
            "last_name_secondary": {
              "type": "string"
            },
            "phone": {
              "type": "string"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": ["company_contact_id", "first_name", "last_name_primary", "phone", "email"]
        }
      },
      "InboxDocument": {
        "type": "object",
        "properties": {
          "inbox_document_id": {
            "type": "number",
            "description": "Inbox document ID."
          },
          "email_subject": {
            "type": "string",
            "description": "The subject line of the email."
          },
          "sender_email": {
            "type": "string",
            "description": "The email address of the sender."
          },
          "document_date": {
            "type": "string",
            "format": "date",
            "description": "The date when the document was created or issued."
          },
          "receive_date": {
            "type": "string",
            "format": "date",
            "description": "The date when the document was received."
          },
          "inbox_document_status": {
            "type": "number",
            "description": "The current status of the document in the inbox."
          },
          "document_id": {
            "type": "number",
            "description": "The identifier assigned to the created document."
          },
          "issuer_name": {
            "type": "string",
            "description": "Issuer name."
          },
          "issuer_tax_id_code": {
            "type": "string",
            "description": "Tax ID code according to tax id table. Required when the document requires the receiver to be specified."
          },
          "issuer_tax_id_type": {
            "type": "string",
            "description": "Tax ID type according to tax id table. Required when the document requires the receiver to be specified."
          },
          "document_type_id": {
            "type": "number",
            "description": "Document type ID according to document type table."
          },
          "document_type_taxbureau": {
            "type": "string",
            "description": "Type of document at the tax bureau."
          },
          "document_number": {
            "type": "number",
            "description": "A unique number assigned to the document."
          },
          "account_id": {
            "type": "number",
            "description": "Account ID."
          },
          "purchase_order": {
            "type": "string",
            "description": "The identifier for the purchase order."
          },
          "reception_confirmation_status": {
            "type": "number",
            "description": "Indicates the status of the reception confirmation for the document."
          },
          "reception_confirmation_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date when the reception of the document was confirmed."
          },
          "receiver_tax_id_code": {
            "type": "string",
            "description": "The tax identification code of the document receiver."
          },
          "receiver_tax_id_type": {
            "type": "string",
            "description": "Tax ID type according to tax id table. Required when the document requires the receiver to be specified."
          },
          "document_approval_status": {
            "type": "number",
            "description": "Indicates the current approval status of the document."
          },
          "document_approval_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date on which the document was approved."
          },
          "product_receipt_status": {
            "type": "number",
            "description": "Indicates the current status of the product receipt."
          },
          "product_receipt_date": {
            "type": "string",
            "format": "date-time",
            "description": "The date on which the product was received."
          },
          "product_receipt_location": {
            "type": "string",
            "description": "The location where the product was received."
          },
          "net_amount": {
            "type": "string",
            "description": "Total of all net values from each of the detail lines."
          },
          "total_amount": {
            "type": "string",
            "description": "Document grand total"
          },
          "document_xml": {
            "type": "string",
            "description": "Base64 encoded XML"
          },
          "document_pdf": {
            "type": "string",
            "description": "Base64 encoded PDF"
          }
        }
      },
      "SimplifiedDocument": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "string"
          },
          "account_id": {
            "type": "string"
          },
          "taxbureau_sending_status": {
            "type": "string"
          },
          "taxbureau_validation_status": {
            "type": "string"
          },
          "issue_date": {
            "type": "string",
            "format": "date"
          },
          "document_number": {
            "type": "string"
          },
          "document_type_id": {
            "type": "string"
          },
          "issuer_tax_id_code": {
            "type": "string"
          },
          "issuer_tax_id_type": {
            "type": "string"
          },
          "receiver_tax_id_code": {
            "type": "string"
          },
          "receiver_tax_id_type": {
            "type": "string"
          },
          "document_status": {
            "type": "number"
          },
          "currency_id": {
            "type": "number"
          },
          "received_issued_flag": {
            "type": "number"
          },
          "net_amount": {
            "type": "string"
          },
          "taxes_amount": {
            "type": "string"
          },
          "total_amount": {
            "type": "string"
          },
          "document_type_taxbureau": {
            "type": "string"
          }
        }
      },
      "DocumentPost": {
        "type": "object",
        "properties": {
          "options": {
            "type": "object",
            "x-order": 1,
            "properties": {
              "template_id": {
                "type": "integer",
                "description": "It corresponds to the ID of the print template for the document. If not provided, the default template will be used. If provided and the template is not found, the default template will be used.",
                "example": "1"
              },
              "gross_values": {
                "type": "integer",
                "description": "This field is only valid for electronic receipts (document_type_id = 39, Chile) and allows the values to be entered as gross amounts (including VAT) for the line items, with the total being directly calculated as the multiplication of the item prices by the quantities. The total calculated in this way will be slightly different from the one obtained by rounding the net amounts and calculating VAT on the net total. The amounts will be adjusted and saved as net values in Koywe, but respecting the rounding applied to the gross amounts.",
                "example": "1"
              },
              "rounding_type": {
                "type": "string",
                "description": "You can input values as “net” or “gross”.\nRounding on gross values will calculate the total value for each line including VAT, and then adjust the document's VAT totals to match the final amount.\nRounding on net values will calculate the multiplications of net values line by line, and then apply the VAT to the total net amount to get the VAT and the total.",
                "example": "net"
              },
              "company_web": {
                "type": "string",
                "description": "You can enter a website URL, which will replace the one registered in the Koywe account data and will be reflected in the automatic email sent to the recipient. It must start with http:// or https://.",
                "example": "https://www.company.com/"
              },
              "company_email": {
                "type": "string",
                "description": "You can enter an email, which will replace the one registered in the Koywe account data and will be reflected in the automatic email sent to the document recipient.",
                "example": "email@email.com"
              }
            }
          },
          "header": {
            "type": "object",
            "x-order": 2,
            "properties": {
              "document_type_id": {
                "type": "integer",
                "description": "Document type ID according to document type table. \nChile :\n2 = Factura electrónica\n32 = Factura exenta electrónica\n37 = Boleta electrónica\n41 = Boleta exenta electrónica\n54 = Guía de despacho electrónica\n17 = Nota de débito electrónica\n16 = Nota de crédito electrónica\n46 = Factura exportación electrónica\n47 = Nota de débito de exportación electrónica\n48 = Nota de crédito de exportación electrónica",
                "example": "2"
              },
              "issue_date": {
                "type": "string",
                "format": "date",
                "description": "Document issue date\nFormat: YYYY-MM-DD"
              },
              "document_number": {
                "type": "integer",
                "description": "Allows defining the folio to be used for issuing the document. By default, this field should NOT be used, so the folio is automatically assigned by the sequence."
              },
              "receiver_tax_id_code": {
                "type": "string",
                "description": "Required for invoices, credit notes, debit notes, named receipts, and exempt named receipts, and optional for other documents.\nRUT without dots, with a hyphen\nFormat: NNNNNNNN-X",
                "example": "11111111-1"
              },
              "receiver_legal_name": {
                "type": "string",
                "description": "Required for invoices, credit notes, debit notes, named receipts, and exempt named receipts. Optional for other documents.\nLegal name of the document receiver."
              },
              "receiver_address": {
                "type": "string",
                "description": "Required for invoices, credit notes, debit notes, named receipts, and exempt named receipts. Optional for other documents.\nAddress of the document receiver."
              },
              "receiver_district": {
                "type": "string",
                "description": "Required for invoices, credit notes, debit notes, named receipts, and exempt named receipts. Optional for other documents.\nDistrict of the document receiver."
              },
              "receiver_city": {
                "type": "string",
                "description": "Required for invoices, credit notes, debit notes, named receipts, and exempt named receipts. Optional for other documents.\nCity of the document receiver."
              },
              "receiver_phone": {
                "type": "string",
                "description": "Required for invoices, credit notes, debit notes, named receipts, and exempt named receipts. Optional for other documents.\nPhone of the document receiver."
              },
              "receiver_activity": {
                "type": "string",
                "description": "Required for invoices, credit notes, and debit notes.\nOptional for other documents.\nReceiver activity of the document receiver.\nNamed receipts should NOT include this field."
              },
              "receiver_postalcode": {
                "type": "string",
                "description": "Optional postal code according to the national format."
              },
              "receiver_state_id": {
                "type": "integer",
                "description": "Refers to the recipient's state. Empty if it doesn't apply. This is a required field on some countries, check the examples for your country"
              },
              "receiver_country_id": {
                "type": "integer",
                "description": "Refers to the recipient's country. If not provided, the default is the same country as the issuer. It is mainly used for export documents."
              },
              "payment_conditions": {
                "type": "string",
                "description": "Payment dates separated by commas\n0 = cash\n30 = 30 days\n0,30 = 50% cash, 50% in 30 days\n0,30,60 = 33% cash, 33% in 30 days, 34% in 60 days."
              },
              "receiver_email": {
                "type": "string",
                "description": "Email for document sending."
              },
              "seller_id": {
                "type": "integer",
                "description": "User ID (Koywe) that will be assigned as the seller associated with the document."
              },
              "currency_id": {
                "type": "integer",
                "description": "Only for export documents.\nValid values according to the table in annexes."
              },
              "exchange_rate_value": {
                "type": "integer",
                "description": "Only when currency_id is defined and its value is not Chilean peso."
              },
              "service_indicator": {
                "type": "integer",
                "description": "It is optional to complete for export documents.\nValid values:\n1 = Invoice for periodic household services.\n2 = Invoice for other periodic services.\n3 = Service Invoice\n4 = Hospitality Services\n5 = International Land Transport Service"
              },
              "sale_modality": {
                "type": "integer",
                "description": "Only for export documents: optional.\nValid values:\n1 = Sale agreed\n2 = Under condition\n3 = Free consignment\n4 = Consignment with minimum sale\n9 = No payment"
              },
              "sale_clause": {
                "type": "integer",
                "description": "Only for export documents: optional.\nValid values:\n1 = CIF\n2 = CFR\n3 = EXW\n4 = FAS\n5 = FOB\n6 = S/CL\n9 = DDP\n10 = FCA\n11 = CPT\n12 = CIP\n17 = DAT\n18 = DAP\n8 = Other"
              },
              "guide_type": {
                "type": "integer",
                "description": "Required ONLY for dispatch guides.\n1 = Operation constitutes sale\n2 = Sales to be made\n3 = Consignments\n4 = Free delivery\n5 = Internal transfers\n6 = Other non-sale transfers\n7 = Return guide\n8 = Transfer for export (non-sale)\n9 = Sale for export"
              },
              "transfer_type": {
                "type": "integer",
                "description": "Required ONLY for dispatch guides that are not internal transfers.\n1 = Dispatch on behalf of the recipient\n2 = Dispatch on behalf of the issuer to recipient's facilities\n3 = Dispatch on behalf of the issuer to other facilities"
              },
              "branch_office_code": {
                "type": "string",
                "description": "This field should only be completed for companies that use branches.\nTo issue from the head office, this field should NOT be entered.\nThe code entered must correspond to the 'internal code' entered in Koywe."
              },
              "observations": {
                "type": "string",
                "description": "Enter a observations."
              },
              "deployment_observations": {
                "type": "integer",
                "description": "0 = do not include remark in XML or PDF\n1 = include remark in XML and PDF\n2 = include remark in PDF and do NOT include in XML\n3 = include remark in XML and do NOT include in PDF\nIn all cases, regardless of its display, the remark will be saved in Koywe and will be visible in the document details on facto.cl.\nIf this option is not entered, the default value is considered to be 1, which will display the remark in the XML and PDF."
              },
              "port_disembarkation": {
                "type": "string",
                "description": "Enter a port disembarkation."
              },
              "port_embarkation": {
                "type": "string",
                "description": "Enter a port embarkation."
              },
              "gross_weight": {
                "type": "string",
                "description": "Enter a gross weight."
              },
              "shipping_address": {
                "type": "string",
                "description": "Enter a shipping address."
              },
              "additional": {
                "type": "object",
                "properties": {
                  "mx_shipping": {
                    "type": "object",
                    "properties": {
                      "distance": {
                        "type": "string",
                        "example": "100"
                      },
                      "transport_code": {
                        "type": "string",
                        "example": "01"
                      },
                      "transport_method_name": {
                        "type": "string",
                        "example": "Autotransporte"
                      },
                      "transport_tax_id_type": {
                        "type": "string",
                        "example": "MX-RFC"
                      },
                      "transport_tax_id_code": {
                        "type": "string",
                        "example": "EKU9003173C9"
                      },
                      "transport_license": {
                        "type": "string",
                        "example": "a234567890"
                      },
                      "origin": {
                        "type": "object",
                        "properties": {
                          "tax_id_type": {
                            "type": "string",
                            "example": "MX-RFC"
                          },
                          "tax_id_code": {
                            "type": "string",
                            "example": "EKU9003173C9"
                          },
                          "date_time": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-01-07T00:00:00"
                          },
                          "address_state_id": {
                            "type": "string",
                            "example": "31"
                          },
                          "address_country_id": {
                            "type": "string",
                            "example": "80"
                          },
                          "address_postalcode": {
                            "type": "string",
                            "example": "13250"
                          }
                        }
                      },
                      "destination": {
                        "type": "object",
                        "properties": {
                          "tax_id_type": {
                            "type": "string",
                            "example": "MX-RFC"
                          },
                          "tax_id_code": {
                            "type": "string",
                            "example": "EKU9003173C9"
                          },
                          "date_time": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2025-01-07T00:00:00"
                          },
                          "address_state_id": {
                            "type": "string",
                            "example": "31"
                          },
                          "address_country_id": {
                            "type": "string",
                            "example": "80"
                          },
                          "address_postalcode": {
                            "type": "string",
                            "example": "13250"
                          }
                        }
                      },
                      "merchandise": {
                        "type": "object",
                        "properties": {
                          "total_weight": {
                            "type": "string",
                            "example": "10"
                          },
                          "sct_permission_code": {
                            "type": "string",
                            "example": "TPAF01"
                          },
                          "sct_permission_number": {
                            "type": "string",
                            "example": "222333444"
                          },
                          "vehicle_configuration": {
                            "type": "string",
                            "example": "VL"
                          },
                          "vehicle_weight": {
                            "type": "string",
                            "example": "1"
                          },
                          "vehicle_license_plate": {
                            "type": "string",
                            "example": "AA22333"
                          },
                          "vehicle_year": {
                            "type": "string",
                            "example": "2020"
                          },
                          "insurance_company": {
                            "type": "string",
                            "example": "PRUEBA SEGUROS"
                          },
                          "insurance_identifier": {
                            "type": "string",
                            "example": "123456"
                          },
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "product_code": {
                                  "type": "string",
                                  "example": "11121900"
                                },
                                "description": {
                                  "type": "string",
                                  "example": "Accesorios telefono"
                                },
                                "quantity": {
                                  "type": "string",
                                  "example": "1"
                                },
                                "weight": {
                                  "type": "string",
                                  "example": "10"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "mx_exports": {
                    "type": "object",
                    "properties": {
                      "terms": {
                        "type": "string",
                        "example": "FOB"
                      },
                      "exchange_rate": {
                        "type": "number",
                        "format": "float",
                        "example": 20.6708
                      },
                      "total": {
                        "type": "integer",
                        "example": 1624
                      },
                      "origin": {
                        "type": "object",
                        "properties": {
                          "address_street": {
                            "type": "string",
                            "example": "CALLE DEL PAPEL"
                          },
                          "address_city_id": {
                            "type": "string",
                            "example": "01"
                          },
                          "address_county_id": {
                            "type": "string",
                            "example": "1961"
                          },
                          "address_state_id": {
                            "type": "string",
                            "example": "45"
                          },
                          "address_country_id": {
                            "type": "string",
                            "example": "80"
                          },
                          "address_postalcode": {
                            "type": "string",
                            "example": "76199"
                          }
                        }
                      },
                      "destination": {
                        "type": "object",
                        "properties": {
                          "tax_id_type": {
                            "type": "string",
                            "example": "US-EIN"
                          },
                          "tax_id_code": {
                            "type": "string",
                            "example": "222333444"
                          },
                          "address_street": {
                            "type": "string",
                            "example": "2470 SW 19th"
                          },
                          "address_state_id": {
                            "type": "string",
                            "example": "61"
                          },
                          "address_country_id": {
                            "type": "string",
                            "example": "89"
                          },
                          "address_postalcode": {
                            "type": "string",
                            "example": "00000"
                          }
                        }
                      },
                      "merchandise": {
                        "type": "object",
                        "properties": {
                          "details": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "customs_code": {
                                  "type": "string",
                                  "example": "2402200100"
                                },
                                "customs_quantity": {
                                  "type": "string",
                                  "example": "117.64"
                                },
                                "sku": {
                                  "type": "string",
                                  "example": "aa111"
                                },
                                "customs_measure_unit": {
                                  "type": "string",
                                  "example": "01"
                                },
                                "customs_unit_value": {
                                  "type": "string",
                                  "example": "13.81"
                                },
                                "customs_total_value": {
                                  "type": "string",
                                  "example": "1624.00"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "pe_header": {
                    "type": "object",
                    "properties": {
                      "operation_type": {
                        "type": "string"
                      },
                      "signature_id": {
                        "type": "string"
                      }
                    }
                  },
                  "pe_retention_header": {
                    "type": "object",
                    "properties": {
                      "pe_sunat_retention_system_code":{
                        "type": "string"
                      },
                      "pe_sunat_retention_percent": {
                        "type": "number"
                      },
                      "pe_sunat_total_paid":{
                        "type": "number"
                      }
                    }
                  },
                  "pe_shipping": {
                    "type": "object",
                    "properties": {
                      "handling_code": {
                        "type": "string"
                      },
                      "special_instructions": {
                        "type": "string"
                      },
                      "handling_instructions": {
                        "type": "string"
                      },
                      "gross_weight_measure": {
                        "type": "string"
                      },
                      "gross_weight_measure_id": {
                        "type": "string"
                      },
                      "shipment_stage": {
                        "type": "object",
                        "properties": {
                          "transport_mode_code": {
                            "type": "string"
                          },
                          "transit_period": {
                            "type": "string"
                          },
                          "driver_person": {
                            "type": "object",
                            "properties": {
                              "driver_id": {
                                "type": "string"
                              },
                              "first_name": {
                                "type": "string"
                              },
                              "family_name": {
                                "type": "string"
                              },
                              "job_title": {
                                "type": "string"
                              },
                              "identity_document_reference": {
                                "type": "string"
                              }
                            }
                          },
                          "carrier_party": {
                            "type": "string"
                          },
                          "party_identification": {
                            "type": "string"
                          },
                          "party_legal_entity_name": {
                            "type": "string"
                          },
                          "party_legal_entity_id": {
                            "type": "string"
                          },
                          "agent_party_id": {
                            "type": "string"
                          }
                        }
                      },
                      "delivery": {
                        "type": "object",
                        "properties": {
                          "delivery_address": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "city_subdivision_name": {
                                "type": "string"
                              },
                              "city_name": {
                                "type": "string"
                              },
                              "country_subentity": {
                                "type": "string"
                              },
                              "district": {
                                "type": "string"
                              },
                              "address_line": {
                                "type": "string"
                              },
                              "country_id": {
                                "type": "string"
                              }
                            }
                          },
                          "dispatch": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "city_subdivision_name": {
                                "type": "string"
                              },
                              "city_name": {
                                "type": "string"
                              },
                              "country_subentity": {
                                "type": "string"
                              },
                              "district": {
                                "type": "string"
                              },
                              "address_line": {
                                "type": "string"
                              },
                              "country_id": {
                                "type": "string"
                              },
                              "dispatch_party_company_id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "transport_handling_unit": {
                        "type": "object",
                        "properties": {
                          "transport_equipment_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "required": [
              "document_type_id",
              "issue_date",
              "issuer_legalname",
              "issuer_address",
              "issuer_district",
              "issuer_city",
              "issuer_phone",
              "issuer_activity",
              "receiver_legalname",
              "receiver_address",
              "receiver_district",
              "receiver_city",
              "receiver_phone",
              "receiver_activity",
              "status",
              "payment_conditions"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number",
                  "format": "float",
                  "description": "Quantity (can have up to 6 decimals, separate with a dot, not with a comma)."
                },
                "line_description": {
                  "type": "string",
                  "description": "Short description to be included in the invoice as line title. Max 100 chars."
                },
                "unit_price": {
                  "type": "number",
                  "format": "float",
                  "description": "Unit price (can have up to 6 decimals, separate with a dot, not with a comma). If using the 'gross_values' option, it must be the value including VAT."
                },
                "long_description": {
                  "type": "string",
                  "description": "Allows adding an additional long description to the detail description for the document."
                },
                "unit_measure": {
                  "type": "string",
                  "description": "Unit that this line is measured in."
                },
                "modifier_amount": {
                  "type": "number",
                  "description": "Amount to discount or surcharge.\nIf it is a discount, use a negative value.\nIf this is used, do not use discount_or_surcharge_percentage."
                },
                "modifier_percentage": {
                  "type": "number",
                  "format": "float",
                  "description": "Percentage to discount or surcharge. If it is a discount, use a negative value. If this is used, do not use discount_or_surcharge_amount."
                },
                "total_taxes": {
                  "type": "number",
                  "format": "float",
                  "description": "Total taxes for this line."
                },
                "total_amount_line": {
                  "type": "number",
                  "format": "float",
                  "description": "Total amount for this line, including taxes and modifiers."
                },
                "taxes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tax_type_id": {
                        "type": "string",
                        "description": "Identifier of the tax type."
                      },
                      "tax_percentage": {
                        "type": "number",
                        "format": "float",
                        "description": "Percentage of the tax."
                      },
                      "tax_amount": {
                        "type": "number",
                        "format": "float",
                        "description": "Amount of the tax."
                      }
                    },
                    "required": ["tax_type_id", "tax_percentage", "tax_amount"]
                  }
                }
              },
              "required": ["quantity", "line_description", "unit_price", "total_amount_line", "unit_measure"]
            }
          },
          "references": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                  "document_type_id": {
                    "type": "integer",
                    "description": "Document type of the referenced document."
                  },
                    "reference_type": {
                      "type": "integer",
                      "description": "Chile: Otros documentos que no son documentos\ntributarios electrónicos: (debe usarse código\nreferencia = 5)\n801 = Orden de compra\n802 = Nota de pedido\n803 = Contrato\n804 = Resolución\n805 = Proceso ChileCompra\n806 = Ficha ChileCompra\n807 = DUS\n808 = B/L (Conocimiento de embarque)\n809 = AWB (Air Will Bill)\n810 = MIC/DTA\n811 = Carta de Porte\n812 = Resolución del SNA donde califica\nServicios de Exportación\n813 = Pasaporte\n814 = Certificado de Depósito Bolsa Prod.\nChile.\n815 = Vale de Prenda Bolsa Prod."
                    },
                    "reference_number": {
                      "type": "string",
                      "description": "Number of the referenced document. In the case of a global reference, it must be 0."
                    },
                    "reference_code": {
                      "type": "integer",
                      "description": "1 = cancel\n2 = correct text\n3 = correct quantity\n4 = set\n5 = reference to other non-tax documents\n6 = reference to dispatch guide\n7 = global reference to a type of document (allows reducing the amount for all documents of this type for this particular client)."
                    },
                    "description": {
                      "type": "string",
                      "description": "Reference description."
                    },
                    "reference_date": {
                      "type": "string",
                      "format": "date",
                      "description": "It should only be entered when using a reference that is not an electronic tax document. (YYYY-MM-DD)."
                    },
                    "additional": {
                      "type": "object",
                      "properties": {
                        "pe_retention_details": {
                          "type": "object",
                          "properties": {
                            "reference_paid_amount": {
                              "type": "number"
                            },
                            "reference_total_invoice_amount": {
                              "type": "number"
                            },
                            "reference_paid_date": {
                              "type": "string",
                              "format": "date"
                            },
                            "reference_payment_id": {
                              "type": "string"
                            },
                            "pe_reference_sunat_retention_amount": {
                              "type": "number"
                            },
                            "pe_reference_sunat_retention_date": {
                              "type": "string",
                              "format": "date"
                            },
                            "calculation_rate": {
                              "type": "number"
                            },
                            "currency_id": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": ["reference_number","reference_code","description"]

            }
          },
          "globals_discounts_surcharges": {
            "type": "array",
            "items": {
              "type": "object",
                  "properties": {
                    "discount_surcharge_code": {
                      "type": "string",
                      "description": "DA = Global discount on taxable\nDE = Global discount on exempt\nRA = Global surcharge on taxable\nRE = Global surcharge on exempt"
                    },
                    "discount_surcharge_value": {
                      "type": "integer",
                      "format": "float",
                      "description": "Value of the discount or surcharge."
                    },
                    "discount_surcharge_type": {
                      "type": "string",
                      "description": "$ = Value will be applied as an amount\n% = Value will be applied as a percentage of the amount"
                    }
                  },
                  "required": ["discount_surcharge_code","discount_surcharge_value","discount_surcharge_type"]
                }
          },
          "totals": {
            "type": "object",
            "properties": {
              "vat_credit_construction_company": {
                "type": "integer",
                "description": "65% credit for construction companies. Article 21 of Decree Law No. 910/75.\nThis is the only code that operates in the opposite manner to the rest, as it is subtracted from the general VAT. It corresponds to VAT * 0.65.\nNOT supported in the case of 'gross_values' (Chile)."
              },
              "net_amount": {
                "type": "integer",
                "description": "Required, except in the case of gross values.\nTotal value of taxable items. It should NOT be entered if using the 'gross_values' option."
              },
              "taxes_amount": {
                "type": "integer",
                "description": "Sum of other taxes, can be negative if there are withholding taxes. NOT supported in the case of 'gross_values'."
              },
              "total_amount": {
                "type": "integer",
                "description": "Final value."
              }
            },
            "required": [ "net_amount", "total_amount"]
          }
        }
      },
      "AccountsPost": {
          "type": "object",
            "properties": {
              "country_id": {
                "type": "integer",
                "description": "Country ID where the account is created, supported IDs are:\\\n253 = Chile\\\n89 = United States\\\n66 = Colombia\\\n80 = Mexico\\\n83 = Perú"
              },
              "contact_name": {
                "type": "string",
                "description": "Contact name associated with the account that will be created."
              },
              "contact_phone": {
                "type": "string",
                "description": "Contact phone associated with the account that will be created, format: \\\n+56xxxxxxxxx = Chile\\\n+1xxxxxxxxx = United States."
              },
              "admin_email": {
                "type": "string",
                "description": "Admin email associated with the account that will be created.\\\nValid for login."
              },
              "admin_password": {
                "type": "string",
                "description": "Admin password associated with the account that will be created.\\\nValid for login."
              },
              "registration_legal_name_company": {
                "type": "string",
                "description": "Legal name of the company being registered."
              },
              "registration_tax_id_code": {
                "type": "string",
                "description": "Tax ID code of the company being registered, format: \\\nxx.xxx.xxx-x for Chile"
              },
              "registration_tax_id_type": {
                "type": "string",
                "description": "Tax ID type of the company being registered, supported IDs are:\\\nCL-RUT = Chile RUT\\\nUS-EIN = United States EIN\\\nUS-SSN = United States SSN\\\nCO-NIT = Colombia NIT\\\nPE-RUC = Peru RUC\\\nMX-RFC = Mexico RFC"
              },
              "registration_company_size": {
                "type": "string",
                "description": "Size of the company being registered."
              },
              "registration_terms_of_use": {
                "type": "integer",
                "description": "Acceptance of the terms of use.\\\n1 = Accepted"
              },
              "registration_type_use": {
                "type": "integer",
                "description": "Type use of the accounts being registered, supported IDs are:\\\n1 = Billing"
              },
              "registration_company_industry_sector": {
                "type": "string",
                "description": "Industry sector of the company being registered."
              },
              "registration_additional_data": {
                "type": "object",
                "description": "Required for certain countries. Check individual fields for more information",
                "properties": {
                  "registration_test_set_id": {
                    "type": "string",
                    "description": "Required for Colombia. TEST SET ID provided by DIAN"
                  },
                  "registration_form_rut": {
                    "type": "string",
                    "description": "Required for Colombia. RUT PDF form provided by DIAN\\\nformat: PDF encoded as base64"
                  },
                  "certificate_file": {
                    "type": "string",
                    "description": "Required for Chile. Digital certificate file.\\\nformat: PFX encoded as base64"
                  },
                  "certificate_key": {
                    "type": "string",
                    "description": "Required for Mexico. Private key provided by SAT.\\\nformat: DER format just as provided by the SAT"
                  },
                  "certificate_cer": {
                    "type": "string",
                    "description": "Required for Mexico. Public certificate provided by SAT.\\\nformat: DER format just as provided by the SAT"
                  },
                  "certificate_password": {
                    "type": "string",
                    "description": "Required for Chile and Mexico. The certificate password"
                  }
                }
             }
            },
            "required": [
              "country_id",
              "contact_name",
              "contact_phone",
              "admin_email",
              "admin_password",
              "registration_legal_name_company",
              "registration_tax_id_code",
              "registration_tax_id_type",
              "registration_company_size",
              "registration_terms_of_use",
              "registration_type_use",
              "registration_additional_data",
              "certificate_file",
              "certificate_password"
            ]


      },
      "AccountsResponse": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "Returns the ID of the created account.",
            "example": "638"
          }
        }
      },
      "Digital_certificate_issuancePost": {
        "type": "object",
        "properties": {
          "certificate_duration": {
            "type": "integer",
            "description": "Duration year of the digital certificate \\\n1 = 1 year\\\n2 = 2 years\\\n3 = 3 years"
          },
          "parent_account_id": {
            "type": "integer",
            "description": "ID of the parent account that is creating the digital certificate link."
          }
        },
        "required": [
          "certificate_duration",
          "parent_account_id"
        ]
      },
      "Digital_certificate_issuanceResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Digital certificate link successfully generated.",
            "example": "Digital certificate link successfully generated"
          },
          "certificate_issuance_id": {
            "type": "string",
            "description": "ID of the digital certificate link.",
            "example": "7y5wvL7tZ3aGEMnxeSF1"
          },
          "certificate_generation_link": {
            "type": "string",
            "description": "Link to generate the digital certificate.",
            "example": "https://certificado.facto.cl/certificado/registro/7y5wvL7tZ3aGEMnxeSF1"
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "document_id": {
            "type": "string",
            "description": "Document ID.",
            "example": "invoice"
          },
          "header": {
            "type": "object",
            "properties": {
              "account_id": {
                "type": "integer",
                "description": "Account ID."
              },
              "document_type_id": {
                "type": "string",
                "description": "Document type ID according to document type table.",
                "example": "invoice"
              },
              "document_type_taxbureau": {
                "type": "string",
                "description": "Type of document at the tax bureau."
              },
              "document_number": {
                "type": "integer",
                "description": "Document number."
              },
              "received_issued_flag": {
                "type": "integer",
                "description": "0 = received, 1 = issued"
              },
              "taxbureau_validation_status": {
                "type": "integer",
                "description": "Document status at the tax bureau."
              },
              "issue_date": {
                "type": "string",
                "format": "date",
                "description": "Document issue date."
              },
              "issuer_tax_id_code": {
                "type": "string",
                "description": "Tax ID code according to tax id table. Required when the document requires the receiver to be specified."
              },
              "issuer_tax_id_type": {
                "type": "string",
                "description": "Tax ID type according to tax id table. Required when the document requires the receiver to be specified."
              },
              "issuer_legal_name": {
                "type": "string",
                "description": "Issuer legal name"
              },
              "issuer_address": {
                "type": "string",
                "description": "Issuer address"
              },
              "issuer_district": {
                "type": "string",
                "description": "Identifier for the district of the document issuer"
              },
              "issuer_city": {
                "type": "string",
                "description": "Identifier for the city of the document issuer"
              },
              "issuer_state_id": {
                "type": "integer",
                "description": "Refers to the issuer's state. Empty if it doesn't apply. This is a required field on some countries, check the examples for your country"
              },
              "issuer_country_id": {
                "type": "string",
                "description": "Identifier for the country of the document issuer"
              },
              "issuer_phone": {
                "type": "string",
                "description": "Issuer phone number"
              },
              "issuer_activity": {
                "type": "string",
                "description": "Represents the activity or business operation of the document issuer"
              },
              "issuer_postalcode": {
                "type": "string",
                "description": "Optional postal code according to the national format."
              },
              "receiver_tax_id_code": {
                "type": "string",
                "description": "The tax identification code of the document receiver"
              },
              "receiver_tax_id_type": {
                "type": "string",
                "description": "Tax ID type according to tax id table. Required when the document requires the receiver to be specified."
              },
              "receiver_legal_name": {
                "type": "string",
                "description": "Receiver legal name"
              },
              "receiver_address": {
                "type": "string",
                "description": "Required address"
              },
              "receiver_district": {
                "type": "string",
                "description": "The location code of the document receiver"
              },
              "receiver_city": {
                "type": "string",
                "description": "The city of the document receiver"
              },
              "receiver_state_id": {
                "type": "integer",
                "description": "Refers to the recipient's state. Empty if it doesn't apply. This is a required field on some countries, check the examples for your country"
              },
              "receiver_country_id": {
                "type": "string",
                "description": "Country ID according to ID table"
              },
              "receiver_phone": {
                "type": "string",
                "description": "The phone of the document receiver"
              },
              "receiver_activity": {
                "type": "string",
                "description": "The activity of the document receiver"
              },
              "receiver_postalcode": {
                "type": "string",
                "description": "Optional postal code according to the national format."
              },
              "payment_conditions": {
                "type": "string",
                "description": "Payment due dates separated by comma. Example: 0 = same day, 30 = 30 days 0,30 = 50% on issuance date, 50% 30 days later, 0,30,60 = 33% on issuance, 33% 30 days, 34% 60 days"
              },
              "currency_id": {
                "type": "number",
                "description": "Currency ID according to currency table"
              },
              "transportation_doc_type": {
                "type": "number",
                "description": "Waybills only. 1 = Operation constitutes a sale  2 = Ventas por efectuar 3 = Consignaciones 4 = Entrega gratuita 5 = Traslados internos 6 = Otros traslados no venta 7 = Guía de devolución 8 = Traslado para exportación (no venta) 9 = Venta para exportación"
              },
              "transportation_doc_billing": {
                "type": "number",
                "description": "Waybills only. 1 = Despacho por cuenta del receptor 2 = Despacho por cuenta del emisor a instalaciones del receptor 3 = Despacho por cuenta del emisor a otras instalaciones"
              },
              "tax_period_month": {
                "type": "number",
                "description": "Tax period where the documents should be accounted"
              },
              "tax_period_year": {
                "type": "number",
                "description": "Tax period where the documents should be accounted"
              },
              "document_status": {
                "type": "number",
                "description": "0 = draft 1= document_issued 2=document sent to counterparty 3 = document accepted by counterparty"
              },
              "taxbureau_send_id": {
                "type": "number",
                "description": "Read only. Null if not sent to tax bureau"
              },
              "taxbureau_send_date": {
                "type": "string",
                "format": "date",
                "description": "Read only. Null if not sent to tax bureau"
              }
            },
            "required": [
              "document_type_id",
              "issue_date",
              "issuer_legalname",
              "issuer_address",
              "issuer_district",
              "issuer_city",
              "issuer_phone",
              "issuer_activity",
              "receiver_legalname",
              "receiver_address",
              "receiver_district",
              "receiver_city",
              "receiver_phone",
              "receiver_activity",
              "status",
              "currency_id"
            ]
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "quantity": {
                  "type": "number",
                  "description": "Quantity of this product or service included in this line"
                },
                "line_description": {
                  "type": "string",
                  "description": "Short description to be included in the invoice as line title. Max 100 chars"
                },
                "unit_measure": {
                  "type": "string",
                  "description": "Unit that this line is measured in"
                },
                "unit_price": {
                  "type": "number",
                  "description": "Price per unit"
                },
                "vat_status": {
                  "type": "number",
                  "description": "Identify if it has value added tax."
                },
                "long_description": {
                  "type": "string",
                  "description": "Long description to be included in the invoice as line title. Max 100 chars"
                },
                "modifier_amount": {
                  "type": "number",
                  "description": ""
                },
                "total_taxes": {
                  "type": "number",
                  "description": "Total of all taxes included for this detail"
                },
                "modifier_percentage": {
                  "type": "number",
                  "description": "Positive or negative percentage to be applied before calculating the line total. Example: -6.5 for a 6.5% discount"
                },
                "total_amount_line": {
                  "type": "number",
                  "description": "Total of the line, including net price and taxes"
                },
                "taxes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tax_type_id": {
                        "type": "string",
                        "description": "Tax ID according to table"
                      },
                      "tax_percentage": {
                        "type": "number",
                        "description": "Percentage if the tax is applied by percentage."
                      },
                      "tax_amount": {
                        "type": "number",
                        "description": "Total tax amount according to the full net amount of this detail line. Should match percentage if entered"
                      }
                    },
                    "required": ["tax_type_id", "tax_amount"]
                  }
                }
              },
              "required": ["quantity", "description", "unit_price", "net_amount", "total_amount_line"]
            }
          },
          "totals": {
            "type": "object",
            "properties": {
              "net_amount": {
                "type": "number",
                "description": "Total of all net values from each of the detail lines."
              },
              "taxes_amount": {
                "type": "number",
                "description": "Total of all other taxes"
              },
              "total_amount": {
                "type": "number",
                "description": "Document grand total"
              }
            },
            "required": ["net_amount", "tax_amount", "total_amount"]
          },
          "electronic_document": {
            "type": "object",
            "properties": {
              "document_xml": {
                "type": "string",
                "description": "Base64 encoded XML"
              },
              "document_pdf": {
                "type": "string",
                "description": "Base64 encoded PDF"
              }
            }
          }
        }
      },
      "AccountsResponseGet": {
        "type": "object",
        "properties": {
          "account_id": {
            "type": "string",
            "description": "Created account ID."
          },
          "account_created": {
            "type": "object",
            "properties": {
              "country_id": {
                "type": "integer",
                "description": "Country ID of the created account."
              },
              "contact_name": {
                "type": "string",
                "description": "Contact name of the created account."
              },
              "contact_phone": {
                "type": "string",
                "description": "Contact phone of the created account."
              },
              "admin_email": {
                "type": "string",
                "description": "Admin email of the created account."
              },
              "registration_legal_name_company": {
                "type": "string",
                "description": "Legal name company of the created account."
              },
              "registration_tax_id_code": {
                "type": "string",
                "description": "TAX ID code of the created account."
              },
              "registration_tax_id_type": {
                "type": "string",
                "description": "TAX ID type of the created account."
              },
              "registration_company_size": {
                "type": "string",
                "description": "Company size of the created account."
              },
              "registration_company_industry_sector": {
                "type": "string",
                "description": "Company industry sector of the created account."
              },
              "registration_type_use": {
                "type": "integer",
                "description": "Type use of the created account.\\\n1 = Billing"
              },
              "certification_status": {
                "type": "string",
                "description": "Certification status of the created account."
              },
              "certification_status_trace": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "date": {
                      "type": "string",
                      "description": "Date of the certification status of the created account."
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the created account."
                    }
                  }
                }

                }
              }
            }
          }
        },
      "Digital_certificate_issuanceResponseGet": {
        "type": "object",
        "properties": {
          "certificate_issuance_id": {
            "type": "string",
            "description": "ID of the digital certificate link.",
            "example": "7y5wvL7tZ3aGEMnxeSF1"
          },
          "certificate_status": {
            "type": "string",
            "description": "Digital certificate status.\\\n0 = Pending\\\n1 = Form completed\\\n2 = Identity validated\\\n3 = Certificate downloaded",
            "example": "3"
          },
          "certificate_duration": {
            "type": "string",
            "description": "Digital certificate duration, 1, 2 or 3 years",
            "example": "1"
          },
          "certificate_file": {
            "type": "string",
            "description": "Digital certificate in base64 format. \\\nThis field is displayed only if the certificate_status is 3 = Certificate downloaded",
            "example": "MIIPGQIBAzEEftkGCSqBgwEggYg8EmKIvV1tMxg8wsW1dqRX9X2x5ZmC155WGvR1nAKoFuQubxirNJfK7gNOSY2uByrdDs2pt9HP9mvjVU709627kEoE+o6WEfO4lnG3ggt3yyUyHLNYBhAwcsggygx82t2VAY/dZpiFnRqBzODveCF3FAcRXs6b+SQAQK6YU72kfh2dJWMoAec2v3W6YssmYLLzLgjHPIKBJTEhJ5CBurHwre2xxoBWvnB9S0zdNZ+ZabFWf+GLMT7EW+6FSY3xWecEYWWq1h0m+WHntBc4v81ItjnaQL444RRrI4G7nLyRR5xyeEWke5mJ5PyB/GHdvtj6A35PkPdZnWTIHMzmLCs0Qls+iynKPbjUU46fWtcy2Fp0V5SBU0AXpCTiJEqr6+0X//MnF3Tup10H6raveW01H5bTTOGopfNkhcVN9dkImmipknR4qMRwkdVIijDg/7PgRyVpLrgp8HHElYgsiVp2bldhXqRAbC/HIFb2n84z4v7cSd+/TXyDI2s0XPs1w60dtEI0T6RirAIOfxEy+y9dcVa/pXWJCvauDxPDTFWq6oSetb0cxN2VciGXRxSpGf0YvZ1zKgdDR/7F84OBjshT1CFqx9l8pfsvXLoxshBf46qLLHSKJ69cWtr1UMvL7GReMfW6Z4XLUmiWC8gXAWUKJtNycbyZq+Ii8wt0J7DJz5NwSMP9wiu8rDI0sdUlzQ/nmFD4TB3tKn8l91ScYqPeiBaRdTzFH9FAH9/apUodTatIAbYNFuJmXxblXs7Vhv9mnAg72iKEQBd0/o0/tfWcPQFiMGz/CmmeFKhHsQzmBmV4VeOfQlMpHYQZJ485RFlTFhRnCPKHmsU07kSte190MvF1zGLdFgNhwy0Umvlmta0iYmzeEA9aw5Obr0I10hL8+yGeFUGfMYwNJQMZmMLwdg2X9Q+1QIzkVNtyvYiW21/b2j5Rsh1UabrXgnUei9URPw8Wjwak86/UYuIBzYIL37a2Teg22xcgPNxh2uVGR1jlUpp4if4nnGIBeBCVqLXOEBysaBJSLAZ0rhu+0MxsN8RAlV5utiLh+NiQCbKKJ6M4uaePD80vXZQzacOvgEwSODZC21qzo5ImfrydYATeCXFKMLShGXzoa7NOMgOCk5s79oohWv6LGsI1dC1Lo+gNwvpRMsCegVqMD5pr0gheE8F16nfJHMaNx2ptAXPoTIRYbvdHZy3qc9RyJPfPYJ9VnGeZh0ziwDhlqpYssHI6PDhL2zjCL0bv7sUDYkGrpO0ZFQqjG4q0Zd2pUI+HnFgf98jsJdVmB+M5CauS5re6lsfW0wpxmNKNYgFKCcr0UtCeLPDNJydXEsKpI5xKdzAXoy3bwS1S7aneBAI9tKJlwXLwk2i/mvolnv1QGbYDT6AiPdcIxifYvrTghDZMNh8O39/nEEyBYI+SVGAxhMDpw/4qB0UnRBeyKx+oG5SFd/HKblluuzhjm6yUso0bW5uR2oyX7iTBBGyZs+ihZ4E65KCCtrXyUUPWMUgowhEbeFkbeE4SARGvCLf/aIY6cRbqwyB31jkH46GYqsY3N2fNlusaUNURPiM7IzWn/8YSkEzCeNScLtMb86YjVhqXsps3+aIwwuqPC7WrqU/2PTGB7jANBgkrBgEEAYI3EQIxADATBgkqhkiG9w0BCRUxBgQEAQAAADBbBgkqhkiG9w0BCRQxTh5MAHsAMQA3ADIAMQA3AEQARgBGAC0AQwAyAEIAMAAtADQAOQAyAEUALQA4AEIAMQA2AC0AOQBGADAAMgAyAEIARAA1ADgAOQAzADgAfTBrBgkrBgEEAYI3EQExXh5cAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcgAgAHYAMQAuADAwggifBgkqhkiG9w0BBwagggiQMIIIjAIBADCCCIUGCSqGSIb3DQEHATAcBgoqhkiG9w0BDAEGMA4ECBipVeFs3OVdAgIH0ICCCFhsZPjN0Hh6ip4V7xMENctqANepoQ0DmDTqBch9XVuZrgleB5fhjIHWZLP/V87WdGH9qL8pXOIPlW1IyFBsZvMAhrcNNpZmUjNYN1Wbr/dRqSkFHBDxDXQd9U4n0HzgGE1k9FikByDDg8M/iM7J7MERUd7XE2EH0VFweObEGkLakzmj69IQGzSGkyPklgdOvO3XRKn+hX2I1SSo75dUVgYkQNiLyisoj+/dNG96RGjCWfOAUcr0pQTIPQ7+5RYbh3zn3d6xkIC/MVRFW+uUR1zeguP2yiC+bRtbLxHNSfhvimXoGC6MMIvLw3Vn0ucr0e1fxWCZighIznyB9QePEZHJjHRGpt/k32z1Ut/7Xyuz2jpgWPBDmvSBJq+yq24f7KQhFeaUgXP5Qs5s0z8gu3FJIZB2ltBdMOlV7bZLnSpb7564py19Q3l+vWOLMEwZ5E8ulrat3UwlEUk/+wnhSXrhtU54GXthgq0QL1I+TS5+K12IiEeZzgEXtAmqR46mlH3ikBJmklntfD2Rsunz1mhyGmr1WhrhxNdbMmZ8WAcF5efGUMMCfb5H6hEMRxA9ODU6/xaI8MzvQPkOZUEyO5izJdS+cPt6liYAYp6npAAdMaP2bj3wDnzGEyA3Z+Y/sKmSDGadzOERkQVinCvyJb0CVBAo0zBYKzbninl05S6XTHTlsO2BBbNZ52SN5rtwtPM1ZwA6SI2HYTjUmqQ7223xE6QQYPQ+ZsyFB4xdRECVTQmkKFbt2ewqDXfhI+g6zk2tgmGuv26fUXXnWDN4sFU3vxwKEqQ5cSZlnbKL6aHPN0tTrbqSnLto9qzDGO8VXVgw8kGUY+p7ATt+twsfRWYZFwtCexkZhZLBaTkNges39KNS1HxFmgaD7LWNXfBJNFSwwj9mF3sZwKvWAU0yOqyAKp8rjV1qVEzDTaQTW6UjqOz65Y9w3CBctr93VQSoPCTOOmZgniXwY/X2qh2MUnYwpwXopc3rE1kAdVduK8mVj/NRtXp61hPxVSVP3YcYDXWpkc1+fjqBWp3gCdIE87FzYmHwotp79U4AvzaQOYWRuDww1KJAqAo/ozCdTHIjAdujzuMfgs6gXx6iDmhhwWVpwkNEM2W0JN9UfR/rxwOWqCm0GewnHzFfAJDtSnIhhMEXEgu/5sKaXOFabuEWibh3MF/XrYIME6o5jf094xw1W523M9AMXFsHuJcHQQV5E4G6XV4ZAIUYjH4xtT+3gJyH3ecimjm7NtLUlP96MAWejxFP5ahJDI3KwzDsXmWxSFik0wDSn9AyBSeSqhsoYwni+wp5KPsjfcaOinUmSjoe/szy2GUTJVklvZg1yZODHjBYYUBtDXYHWU708lOCGY6Mr4whYkk2A5R7yFU00m4a2SL96J4GT0dByFqHIIC1EaFJJB/D+35TzFKNMaZHoBvLMv+JpbCMEhM4pGqZLw8UE9IDuF9BBOJlDPmYCr17uvkF43Afn2i920w7k5BRKcdNH0pRPJ4q3yuZSk7S6bs+6f2OxWVnKby5n/5GGX2A373N86TDzf1pucqiapBqhQuywRKvRSHOTZdD+CI2VLbWRpcP+GzSZZMGlomZMioTbkr+nHGCj3Cswt9NHUcY0oPAtPc2Z4N2titgdJ9Puvn+OAQQzJtK32Sdk+a72NOyLy/qlpfFyf0OAt7zF/0QjRs4fELcJTeLGNfVDtUirW0DHsXsKeZuqEbZKLkTo+sZMk2yL6jBakdPriRY0LjyME4icw/1e1WKW3RgygmloMR0xyQP748RmifWLg8AqF5HvPPV4a3QSzEXEMfp1m2az5gNQbS99hipQFwl9Zd8o/f0GoqShbg+J7bYwo8Y7n5Jtze01BwCO2miY0PLJY3wyEORAj0c4aw674ueJDvHC5brbrtcoOWMLa7SUmEdNjNLMJRIXcUUEt6ZvH4EM5kDuNBoCRLsN4C8B+FerQsiFKKTXfRQphuSdbb+WxFXIJfY2jwD+0U9bGrzaca9dScSEUvRA2dBUbtmKRcwwhgI8CEd9YSIeYdULJdxQQU5mreIqC/9bxnbehjjmHp99mEMg8="
          }
        }
      },

      "Product": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "string",
            "description": "Read only. Internal ID of the product"
          },
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "model": {
            "type": "string",
            "description": "Optional. Product model"
          },
          "brand": {
            "type": "string",
            "description": "Optional. Product brand"
          },
          "status": {
            "type": "integer",
            "description": "0 = inactive, 1 = active"
          },
          "sku": {
            "type": "string",
            "description": "Internal code that identifies a product or service. If not entered, an automatic number will be assigned"
          },
          "type": {
            "type": "integer",
            "description": "1 = physical product, 2 = service"
          },
          "invoicing_long_description": {
            "type": "string",
            "description": "Optional. Extra information to be included in the long_description of invoices"
          },
          "internal_description": {
            "type": "string",
            "description": "Optional. Additional information to be used internally"
          },
          "barcode": {
            "type": "string",
            "description": "Optional. Barcode that is printed on the product box, usually generated by the supplier"
          },
          "measuring_unit": {
            "type": "string",
            "description": "Optional. The unit this product is measured in. Example: Kilograms, days, Pounds, etc."
          },
          "embedded_quantity_barcode": {
            "type": "boolean",
            "description": "Optional. This field is used to identify when a product can be sold using embedded quantity barcodes. 0 = not a quantity barcode product. 1 = quantity barcode enabled. 0 by default"
          },
          "embedded_quantity_barcode_decimals": {
            "type": "integer",
            "description": "Optional. Decimals associated with the quantity barcode. 0 by default"
          },
          "prices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "price_list_id": {
                  "type": "string",
                  "description": "Reference to a price list"
                },
                "price_net": {
                  "type": "number",
                  "description": "Price net of taxes"
                },
                "price_taxes": {
                  "type": "number",
                  "description": "Total taxes applicable to the price"
                },
                "price_total": {
                  "type": "number",
                  "description": "Total price"
                },
                "currency_id": {
                  "type": "string",
                  "description": "Currency ID according to currency table"
                },
                "sales_comission_percentage": {
                  "type": "number",
                  "description": "Sales commission percentage"
                },
                "taxes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "tax_type_id": {
                        "type": "integer",
                        "description": "Tax ID according to table"
                      },
                      "tax_percentage": {
                        "type": "number",
                        "description": "Percentage if the tax is applied by percentage"
                      },
                      "tax_amount": {
                        "type": "number",
                        "description": "Total tax amount according to the full net amount"
                      }
                    }
                  }
                }
              },
              "required": ["price_list_id", "currency_id"]
            }
          }
        },
        "required": ["name", "status", "type"]
      },
      "PriceList": {
        "type": "object",
        "properties": {
          "price_list_id": {
            "type": "string",
            "description": "Unique identifier for the price list"
          },
          "price_list_name": {
            "type": "string",
            "description": "Name of the price list, e.g., wholesale, retail"
          }
        },
        "required": ["price_list_id", "price_list_name"]
      },
      "Transfer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "document_id": {
            "type": "string"
          },
          "receiver_company": {
            "$ref": "#/components/schemas/Company"
          },
          "status": {
            "type": "string"
          },
          "transfer_date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": ["document_id", "receiver_company", "status"]
      },
      "DocumentType": {
        "type": "object",
        "properties": {
          "document_type_id": {
            "type": "string",
            "description": "Read only. ID of the document type"
          },
          "name": {
            "type": "string",
            "description": "Read only. Document type name in the local language"
          },
          "received_issued_flag": {
            "type": "boolean",
            "description": "Read only. 0 = received, 1 = issued"
          },
          "country_id": {
            "type": "string",
            "description": "Read only. Country ID according to ID table"
          }
        },
        "required": ["document_type_id", "name", "received_issued_flag", "country_id"]
      },
      "Tax": {
        "type": "object",
        "properties": {
          "tax_id": {
            "type": "string"
          },
          "tax_type": {
            "type": "string"
          },
          "tax_value": {
            "type": "string"
          },
          "tax_amount": {
            "type": "string"
          },
          "country_id": {
            "type": "string"
          },
          "country_name": {
            "type": "string"
          }
        },
        "required": ["tax_id", "tax_type", "tax_value", "tax_amount", "country_id", "country_name"]
      },
      "Payment": {
        "type": "object",
        "properties": {
          "payment_date": {
            "type": "string",
            "format": "date",
            "description": "The date of the payment."
          },
          "document_id": {
            "type": "string",
            "description": "The ID of the document associated with the payment."
          },
          "payment_type_id": {
            "type": "string",
            "description": "The ID of the payment type."
          },
          "payment_amount": {
            "type": "number",
            "description": "The amount of the payment."
          },
          "payment_details": {
            "type": "string",
            "description": "Additional details about the payment."
          },
          "cash_account_id": {
            "type": "string",
            "description": "The ID of the cash account associated with the payment."
          }
        },
        "required": ["payment_date", "document_id", "payment_type_id", "payment_amount", "cash_account_id"]
      },
      "PaymentResponseGet": {
        "type": "object",
        "properties": {
          "payment_id": {
            "type": "string",
            "description": "ID of the payment.",
            "example": "aaa111"
          },
          "payment_date": {
            "type": "string",
            "format": "date",
            "description": "The date of the payment."
          },
          "document_id": {
            "type": "string",
            "description": "The ID of the document associated with the payment."
          },
          "payment_type_id": {
            "type": "string",
            "description": "The ID of the payment type."
          },
          "payment_amount": {
            "type": "number",
            "description": "The amount of the payment."
          },
          "payment_details": {
            "type": "string",
            "description": "Additional details about the payment."
          },
          "cash_account_id": {
            "type": "string",
            "description": "The ID of the cash account associated with the payment."
          }
        }
      }
    }
  }
}
